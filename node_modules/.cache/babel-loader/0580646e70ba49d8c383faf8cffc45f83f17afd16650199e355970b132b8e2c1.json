{"ast":null,"code":"// import { createContext, useEffect, useState } from \"react\";\n// import { food_list } from \"../assets/assets\";\n\n// export const StoreContext = createContext(null);\n\n// const StoreContextProvider = (props) => {\n//     const [cartItems, setCartItems] = useState({});\n\n//     const addToCart = (itemId) => {\n//         setCartItems((prev) => ({\n//             ...prev,\n//             [itemId]: prev[itemId] ? prev[itemId] + 1 : 1,\n//         }));\n//     };\n\n//     const removeFromCart = (itemId) => {\n//         setCartItems((prev) => {\n//             if (prev[itemId] > 1) {\n//                 return { ...prev, [itemId]: prev[itemId] - 1 };\n//             } else {\n//                 const updatedCart = { ...prev };\n//                 delete updatedCart[itemId];\n//                 return updatedCart;\n//             }\n//         });\n//     };\n\n//     useEffect(() => {\n//         console.log(cartItems);\n//     }, [cartItems]);\n\n//     const contextValue = {\n//         food_list,\n//         cartItems,\n//         setCartItems,\n//         addToCart,\n//         removeFromCart,\n//     };\n\n//     return (\n//         <StoreContext.Provider value={contextValue}>\n//             {props.children}\n//         </StoreContext.Provider>\n//     );\n// };\n\n// export default StoreContextProvider;\n\n// import { createContext, useEffect, useState } from \"react\";\n// import { food_list } from \"../assets/assets\";\n\n// export const StoreContext =createContext(null)\n\n// const StoreContextProvider=(props)=>{\n//     const[cartItems,setCardItems]=useState({});\n\n//     const addToCard=(itemId)=>{\n//         if(!cartItems[itemId]){\n//             setCardItems((prev)=>({...prev,[itemId]:1}))\n//         }else{\n//             setCardItems((prev)=>({...prev,[itemId]:prev[itemId]+1,}))\n//         }\n//     }\n//     const removeFromCard=(itemId)=>{\n//         setCardItems((prev)=>({...prev,[itemId]:prev[itemId]-1}));\n//     }\n//     useEffect(()=>{\n//     console.log(cartItems);\n\n//     },[cartItems])\n//     const contextValue ={\n//         food_list,\n//         cartItems,\n//         setCardItems,\n//         addToCard,\n//         removeFromCard\n\n//     }\n\n//     return(\n//         <StoreContext.Provider value={contextValue}>\n//             {props.children}\n//         </StoreContext.Provider>\n//     )\n// }\n\n// export default StoreContextProvider","map":{"version":3,"names":[],"sources":["D:/Apna data/Binary Hub/React project/my/src/Context/StoreContext.jsx"],"sourcesContent":["// import { createContext, useEffect, useState } from \"react\";\r\n// import { food_list } from \"../assets/assets\";\r\n\r\n// export const StoreContext = createContext(null);\r\n\r\n// const StoreContextProvider = (props) => {\r\n//     const [cartItems, setCartItems] = useState({});\r\n\r\n//     const addToCart = (itemId) => {\r\n//         setCartItems((prev) => ({\r\n//             ...prev,\r\n//             [itemId]: prev[itemId] ? prev[itemId] + 1 : 1,\r\n//         }));\r\n//     };\r\n\r\n//     const removeFromCart = (itemId) => {\r\n//         setCartItems((prev) => {\r\n//             if (prev[itemId] > 1) {\r\n//                 return { ...prev, [itemId]: prev[itemId] - 1 };\r\n//             } else {\r\n//                 const updatedCart = { ...prev };\r\n//                 delete updatedCart[itemId];\r\n//                 return updatedCart;\r\n//             }\r\n//         });\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         console.log(cartItems);\r\n//     }, [cartItems]);\r\n\r\n//     const contextValue = {\r\n//         food_list,\r\n//         cartItems,\r\n//         setCartItems,\r\n//         addToCart,\r\n//         removeFromCart,\r\n//     };\r\n\r\n//     return (\r\n//         <StoreContext.Provider value={contextValue}>\r\n//             {props.children}\r\n//         </StoreContext.Provider>\r\n//     );\r\n// };\r\n\r\n// export default StoreContextProvider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { createContext, useEffect, useState } from \"react\";\r\n// import { food_list } from \"../assets/assets\";\r\n\r\n// export const StoreContext =createContext(null)\r\n\r\n// const StoreContextProvider=(props)=>{\r\n//     const[cartItems,setCardItems]=useState({});\r\n\r\n    \r\n//     const addToCard=(itemId)=>{\r\n//         if(!cartItems[itemId]){\r\n//             setCardItems((prev)=>({...prev,[itemId]:1}))\r\n//         }else{\r\n//             setCardItems((prev)=>({...prev,[itemId]:prev[itemId]+1,}))\r\n//         }\r\n//     }\r\n//     const removeFromCard=(itemId)=>{\r\n//         setCardItems((prev)=>({...prev,[itemId]:prev[itemId]-1}));\r\n//     }\r\n//     useEffect(()=>{\r\n//     console.log(cartItems);\r\n\r\n//     },[cartItems])\r\n//     const contextValue ={\r\n//         food_list,\r\n//         cartItems,\r\n//         setCardItems,\r\n//         addToCard,\r\n//         removeFromCard\r\n\r\n//     }\r\n    \r\n//     return(\r\n//         <StoreContext.Provider value={contextValue}>\r\n//             {props.children}\r\n//         </StoreContext.Provider>\r\n//     )\r\n// }\r\n\r\n// export default StoreContextProvider"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}