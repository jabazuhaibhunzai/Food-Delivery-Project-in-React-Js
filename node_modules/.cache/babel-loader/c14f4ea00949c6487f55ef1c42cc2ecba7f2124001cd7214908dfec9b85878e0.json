{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apna data\\\\Binary Hub\\\\React project\\\\my\\\\src\\\\Context\\\\StoreContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { food_list } from \"../assets/assets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContext = /*#__PURE__*/createContext(null);\nconst StoreContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState({});\n\n  // Add item to cart\n  const addToCard = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1 // Increment count or set to 1 if not present\n    }));\n  };\n\n  // Remove item from cart\n  const removeFromCard = itemId => {\n    setCartItems(prev => {\n      if (!prev[itemId]) return prev; // Guard against removing non-existent item\n      const updatedCart = {\n        ...prev\n      };\n      if (updatedCart[itemId] === 1) {\n        delete updatedCart[itemId]; // Remove item if count reaches 0\n      } else {\n        updatedCart[itemId] -= 1;\n      }\n      return updatedCart;\n    });\n  };\n\n  // Debugging: Log cart items whenever they change\n  useEffect(() => {\n    console.log(\"Updated Cart Items:\", cartItems);\n  }, [cartItems]);\n\n  // Context Value\n  const contextValue = {\n    food_list,\n    cartItems,\n    addToCard,\n    removeFromCard\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreContextProvider, \"EMGoXSPGNLmBaoMYvt9fsHvzjHs=\");\n_c = StoreContextProvider;\nexport default StoreContextProvider;\n\n// import { createContext, useEffect, useState } from \"react\";\n// import { food_list } from \"../assets/assets\";\n\n// export const StoreContext =createContext(null)\n\n// const StoreContextProvider=(props)=>{\n//     const[cartItems,setCardItems]=useState({});\n\n//     const addToCard=(itemId)=>{\n//         if(!cartItems[itemId]){\n//             setCardItems((prev)=>({...prev,[itemId]:1}))\n//         }else{\n//             setCardItems((prev)=>({...prev,[itemId]:prev[itemId]+1,}))\n//         }\n//     }\n//     const removeFromCard=(itemId)=>{\n//         setCardItems((prev)=>({...prev,[itemId]:prev[itemId]-1,}));\n//     }\n//     useEffect(()=>{\n//     console.log(cartItems);\n\n//     },[cartItems])\n//     const contextValue ={\n//         food_list,\n//         cartItems,\n//         setCardItems,\n//         addToCard,\n//         removeFromCard\n\n//     }\n\n//     return(\n//         <StoreContext.Provider value={contextValue}>\n//             {props.children}\n//         </StoreContext.Provider>\n//     )\n// }\n\n// export default StoreContextProvider\nvar _c;\n$RefreshReg$(_c, \"StoreContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","food_list","jsxDEV","_jsxDEV","StoreContext","StoreContextProvider","props","_s","cartItems","setCartItems","addToCard","itemId","prev","removeFromCard","updatedCart","console","log","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Apna data/Binary Hub/React project/my/src/Context/StoreContext.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { food_list } from \"../assets/assets\";\r\n\r\nexport const StoreContext = createContext(null);\r\n\r\nconst StoreContextProvider = (props) => {\r\n  const [cartItems, setCartItems] = useState({});\r\n\r\n  // Add item to cart\r\n  const addToCard = (itemId) => {\r\n    setCartItems((prev) => ({\r\n      ...prev,\r\n      [itemId]: (prev[itemId] || 0) + 1, // Increment count or set to 1 if not present\r\n    }));\r\n  };\r\n\r\n  // Remove item from cart\r\n  const removeFromCard = (itemId) => {\r\n    setCartItems((prev) => {\r\n      if (!prev[itemId]) return prev; // Guard against removing non-existent item\r\n      const updatedCart = { ...prev };\r\n      if (updatedCart[itemId] === 1) {\r\n        delete updatedCart[itemId]; // Remove item if count reaches 0\r\n      } else {\r\n        updatedCart[itemId] -= 1;\r\n      }\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  // Debugging: Log cart items whenever they change\r\n  useEffect(() => {\r\n    console.log(\"Updated Cart Items:\", cartItems);\r\n  }, [cartItems]);\r\n\r\n  // Context Value\r\n  const contextValue = {\r\n    food_list,\r\n    cartItems,\r\n    addToCard,\r\n    removeFromCard,\r\n  };\r\n\r\n  return (\r\n    <StoreContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StoreContextProvider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { createContext, useEffect, useState } from \"react\";\r\n// import { food_list } from \"../assets/assets\";\r\n\r\n// export const StoreContext =createContext(null)\r\n\r\n// const StoreContextProvider=(props)=>{\r\n//     const[cartItems,setCardItems]=useState({});\r\n\r\n    \r\n//     const addToCard=(itemId)=>{\r\n//         if(!cartItems[itemId]){\r\n//             setCardItems((prev)=>({...prev,[itemId]:1}))\r\n//         }else{\r\n//             setCardItems((prev)=>({...prev,[itemId]:prev[itemId]+1,}))\r\n//         }\r\n//     }\r\n//     const removeFromCard=(itemId)=>{\r\n//         setCardItems((prev)=>({...prev,[itemId]:prev[itemId]-1,}));\r\n//     }\r\n//     useEffect(()=>{\r\n//     console.log(cartItems);\r\n\r\n//     },[cartItems])\r\n//     const contextValue ={\r\n//         food_list,\r\n//         cartItems,\r\n//         setCardItems,\r\n//         addToCard,\r\n//         removeFromCard\r\n\r\n//     }\r\n    \r\n//     return(\r\n//         <StoreContext.Provider value={contextValue}>\r\n//             {props.children}\r\n//         </StoreContext.Provider>\r\n//     )\r\n// }\r\n\r\n// export default StoreContextProvider"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAE/C,MAAMO,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMU,SAAS,GAAIC,MAAM,IAAK;IAC5BF,YAAY,CAAEG,IAAI,KAAM;MACtB,GAAGA,IAAI;MACP,CAACD,MAAM,GAAG,CAACC,IAAI,CAACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAE;IACrC,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,cAAc,GAAIF,MAAM,IAAK;IACjCF,YAAY,CAAEG,IAAI,IAAK;MACrB,IAAI,CAACA,IAAI,CAACD,MAAM,CAAC,EAAE,OAAOC,IAAI,CAAC,CAAC;MAChC,MAAME,WAAW,GAAG;QAAE,GAAGF;MAAK,CAAC;MAC/B,IAAIE,WAAW,CAACH,MAAM,CAAC,KAAK,CAAC,EAAE;QAC7B,OAAOG,WAAW,CAACH,MAAM,CAAC,CAAC,CAAC;MAC9B,CAAC,MAAM;QACLG,WAAW,CAACH,MAAM,CAAC,IAAI,CAAC;MAC1B;MACA,OAAOG,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACdgB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAER,SAAS,CAAC;EAC/C,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMS,YAAY,GAAG;IACnBhB,SAAS;IACTO,SAAS;IACTE,SAAS;IACTG;EACF,CAAC;EAED,oBACEV,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACxCd,KAAK,CAACc;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAE5B,CAAC;AAACjB,EAAA,CA3CIF,oBAAoB;AAAAoB,EAAA,GAApBpB,oBAAoB;AA6C1B,eAAeA,oBAAoB;;AAUnC;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}